syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "./;accountproto";

service account {

  /// --- Accounts --- ///
  rpc ListAccounts (ListAccountsRequest) returns (ListAccountsResponse) {
  }

  rpc ReadAccount (ReadAccountRequest) returns (ReadAccountResponse) {
  }

  rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse) {
  }

  rpc UpdateAccount (UpdateAccountRequest) returns (UpdateAccountResponse) {
  }

  rpc PageAccount (PageAccountRequest) returns (PageAccountResponse) {
  }

  /// --- Exchanges --- ///
  rpc AddExchange (AddExchangeRequest) returns (AddExchangeResponse) {
  }

  rpc ListExchanges (ListExchangesRequest) returns (ListExchangesResponse) {
  }

  rpc ReadExchange (ReadExchangeRequest) returns (ReadExchangeResponse) {
  }

  rpc ReadPrimaryExchangeByUserID (ReadPrimaryExchangeByUserIDRequest) returns (ReadPrimaryExchangeByUserIDResponse) {}
}

enum PagerType {
    DISCORD = 0;
    PHONE = 1;
    SMS = 2;
    EMAIL = 3;
}

enum PagerPriority {
    HIGH = 0;
    LOW = 1;
}

// Only used for responses, we currently don't have mechanisms to remove sensitived data such
// as keys or phones. This should only contain insensitive data.
message Account {
    string user_id = 1;
    string email = 2;
    bool is_futures_member = 3;
    bool is_admin = 4;
    string username = 5;
    google.protobuf.Timestamp created = 6;
    google.protobuf.Timestamp last_updated = 7;
    string primary_exchange = 8;
    string default_dca_strategy = 9;
}

message ListAccountsRequest{
    bool is_futures_member = 1;
}

message ListAccountsResponse {
    repeated Account accounts = 1;
}

message ReadAccountRequest {
    string user_id = 1;
}

message ReadAccountResponse {
    Account account = 1;
}

message CreateAccountRequest {
    string user_id = 4;
    string username = 1;
    string password = 2;
    string email = 3;
    string phone_number = 5;
    PagerType high_priority_pager = 6;
    PagerType low_priority_pager = 7;
}

message CreateAccountResponse {}

message UpdateAccountRequest {
    string user_id = 1;
    string username = 2;
    string password = 3;
    string email = 4;
    string phone_number = 5;
    PagerType high_priority_pager = 6;
    PagerType low_priority_pager = 7;
    bool is_admin = 9;
    bool is_futures = 10; 
    string actor_id = 11;
    string default_dca_strategy = 12;
}

message UpdateAccountResponse {
    Account account = 1;
}

message PageAccountRequest {
    string user_id = 1;
    string content = 2;
    PagerPriority priority = 3;
}

message PageAccountResponse {}

enum ExchangeType {
    BINANCE = 0;
    FTX = 1;
    DERIBIT = 2;
    BITFINEX = 3;
}

message Exchange {
    ExchangeType exchange_type = 1;
    string api_key = 2;
    string secret_key = 3;
    string sub_account = 4;
    bool is_active = 5;
    string exchange_id = 6;
}

message AddExchangeRequest {
    Exchange exchange = 1;
    string user_id = 2;
}

message AddExchangeResponse {
    Exchange exchange = 1;
    bool verified = 2;
    string reason = 3;
}

message ListExchangesRequest {
    string user_id = 1;
    bool active_only = 2;
}

message ListExchangesResponse {
    repeated Exchange exchanges = 1;
}

message ReadExchangeRequest {
    string exchange_id = 1;
}

message ReadExchangeResponse{
    Exchange exchange = 1;
}

message ReadPrimaryExchangeByUserIDRequest {
    string user_id = 1;
    string actor_id = 2;
}

message ReadPrimaryExchangeByUserIDResponse {
    Exchange primary_exchange = 1;
}
