// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package accountproto

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BinanceClient is the client API for Binance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BinanceClient interface {
}

type binanceClient struct {
	cc grpc.ClientConnInterface
}

func NewBinanceClient(cc grpc.ClientConnInterface) BinanceClient {
	return &binanceClient{cc}
}

// BinanceServer is the server API for Binance service.
// All implementations must embed UnimplementedBinanceServer
// for forward compatibility
type BinanceServer interface {
	mustEmbedUnimplementedBinanceServer()
}

// UnimplementedBinanceServer must be embedded to have forward compatible implementations.
type UnimplementedBinanceServer struct {
}

func (*UnimplementedBinanceServer) mustEmbedUnimplementedBinanceServer() {}

func RegisterBinanceServer(s *grpc.Server, srv BinanceServer) {
	s.RegisterService(&_Binance_serviceDesc, srv)
}

var _Binance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "accountproto.binance",
	HandlerType: (*BinanceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "s.binance/proto/binance.proto",
}
