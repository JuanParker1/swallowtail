syntax = "proto3";

option go_package = "./;coingeckoproto";

service coingecko {
    rpc GetAssetLatestPriceByID (GetAssetLatestPriceByIDRequest) returns (GetAssetLatestPriceByIDResponse) {
    }

    rpc GetAssetLatestPriceBySymbol (GetAssetLatestPriceBySymbolRequest) returns (GetAssetLatestPriceBySymbolResponse) {
    }

    rpc GetATHByID (GetATHByIDRequest) returns (GetATHByIDResponse) {
    }

    rpc GetATHBySymbol (GetATHBySymbolRequest) returns (GetATHBySymbolResponse) {
    }
}

message CoinMetadata {
}

message GetAssetLatestPriceByIDRequest {
    string coingecko_coin_id = 1;
    string asset_pair = 2;
}

message GetAssetLatestPriceByIDResponse {
    string coingecko_coin_id = 1;
    string asset_symbol = 2;
    float latest_price = 3;
    float percentage_price_change_24h = 4;
}

message GetAssetLatestPriceBySymbolRequest {
    string asset_symbol = 1;
    string asset_pair = 2;
}

message GetAssetLatestPriceBySymbolResponse{
    string coingecko_coin_id = 1;
    string asset_symbol = 2;
    float latest_price = 3;
    float percentage_price_change_24h = 4;
}

message GetATHBySymbolRequest {
    string asset_symbol = 1;
    string asset_pair = 2;
}

message GetATHBySymbolResponse{
    string coingecko_coin_id = 1;
    string asset_symbol = 2;
    float all_time_high_price = 3;
    float current_price = 4;
}

message GetATHByIDRequest {
    string coingecko_coin_id = 1;
    string asset_pair = 2;
}

message GetATHByIDResponse{
    string coingecko_coin_id = 1;
    string asset_symbol = 2;
    float all_time_high_price = 3;
    float current_price = 4;
}
