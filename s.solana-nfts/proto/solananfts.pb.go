// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: s.solana-nfts/proto/solananfts.proto

package solananftsproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SolanaNFTSortDirection int32

const (
	SolanaNFTSortDirection_DESCENDING SolanaNFTSortDirection = 0
	SolanaNFTSortDirection_ASCENDING  SolanaNFTSortDirection = 1
)

// Enum value maps for SolanaNFTSortDirection.
var (
	SolanaNFTSortDirection_name = map[int32]string{
		0: "DESCENDING",
		1: "ASCENDING",
	}
	SolanaNFTSortDirection_value = map[string]int32{
		"DESCENDING": 0,
		"ASCENDING":  1,
	}
)

func (x SolanaNFTSortDirection) Enum() *SolanaNFTSortDirection {
	p := new(SolanaNFTSortDirection)
	*p = x
	return p
}

func (x SolanaNFTSortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SolanaNFTSortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_s_solana_nfts_proto_solananfts_proto_enumTypes[0].Descriptor()
}

func (SolanaNFTSortDirection) Type() protoreflect.EnumType {
	return &file_s_solana_nfts_proto_solananfts_proto_enumTypes[0]
}

func (x SolanaNFTSortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SolanaNFTSortDirection.Descriptor instead.
func (SolanaNFTSortDirection) EnumDescriptor() ([]byte, []int) {
	return file_s_solana_nfts_proto_solananfts_proto_rawDescGZIP(), []int{0}
}

type SolanaNFTVendor int32

const (
	SolanaNFTVendor_UNKNOWN    SolanaNFTVendor = 0
	SolanaNFTVendor_MAGIC_EDEN SolanaNFTVendor = 1
	SolanaNFTVendor_SOLANART   SolanaNFTVendor = 2
)

// Enum value maps for SolanaNFTVendor.
var (
	SolanaNFTVendor_name = map[int32]string{
		0: "UNKNOWN",
		1: "MAGIC_EDEN",
		2: "SOLANART",
	}
	SolanaNFTVendor_value = map[string]int32{
		"UNKNOWN":    0,
		"MAGIC_EDEN": 1,
		"SOLANART":   2,
	}
)

func (x SolanaNFTVendor) Enum() *SolanaNFTVendor {
	p := new(SolanaNFTVendor)
	*p = x
	return p
}

func (x SolanaNFTVendor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SolanaNFTVendor) Descriptor() protoreflect.EnumDescriptor {
	return file_s_solana_nfts_proto_solananfts_proto_enumTypes[1].Descriptor()
}

func (SolanaNFTVendor) Type() protoreflect.EnumType {
	return &file_s_solana_nfts_proto_solananfts_proto_enumTypes[1]
}

func (x SolanaNFTVendor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SolanaNFTVendor.Descriptor instead.
func (SolanaNFTVendor) EnumDescriptor() ([]byte, []int) {
	return file_s_solana_nfts_proto_solananfts_proto_rawDescGZIP(), []int{1}
}

type ReadSolanaPriceStatisticsByCollectionIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId  string                 `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	Vendor        SolanaNFTVendor        `protobuf:"varint,2,opt,name=vendor,proto3,enum=SolanaNFTVendor" json:"vendor,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Order         SolanaNFTSortDirection `protobuf:"varint,4,opt,name=order,proto3,enum=SolanaNFTSortDirection" json:"order,omitempty"`
	SearchContext string                 `protobuf:"bytes,5,opt,name=search_context,json=searchContext,proto3" json:"search_context,omitempty"`
}

func (x *ReadSolanaPriceStatisticsByCollectionIDRequest) Reset() {
	*x = ReadSolanaPriceStatisticsByCollectionIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_s_solana_nfts_proto_solananfts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSolanaPriceStatisticsByCollectionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSolanaPriceStatisticsByCollectionIDRequest) ProtoMessage() {}

func (x *ReadSolanaPriceStatisticsByCollectionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_s_solana_nfts_proto_solananfts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSolanaPriceStatisticsByCollectionIDRequest.ProtoReflect.Descriptor instead.
func (*ReadSolanaPriceStatisticsByCollectionIDRequest) Descriptor() ([]byte, []int) {
	return file_s_solana_nfts_proto_solananfts_proto_rawDescGZIP(), []int{0}
}

func (x *ReadSolanaPriceStatisticsByCollectionIDRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *ReadSolanaPriceStatisticsByCollectionIDRequest) GetVendor() SolanaNFTVendor {
	if x != nil {
		return x.Vendor
	}
	return SolanaNFTVendor_UNKNOWN
}

func (x *ReadSolanaPriceStatisticsByCollectionIDRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReadSolanaPriceStatisticsByCollectionIDRequest) GetOrder() SolanaNFTSortDirection {
	if x != nil {
		return x.Order
	}
	return SolanaNFTSortDirection_DESCENDING
}

func (x *ReadSolanaPriceStatisticsByCollectionIDRequest) GetSearchContext() string {
	if x != nil {
		return x.SearchContext
	}
	return ""
}

type PriceStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price         float32         `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	LastSoldPrice float32         `protobuf:"fixed32,3,opt,name=last_sold_price,json=lastSoldPrice,proto3" json:"last_sold_price,omitempty"`
	Attributes    []string        `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Name          string          `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	ForSale       bool            `protobuf:"varint,6,opt,name=for_sale,json=forSale,proto3" json:"for_sale,omitempty"`
	Vendor        SolanaNFTVendor `protobuf:"varint,7,opt,name=vendor,proto3,enum=SolanaNFTVendor" json:"vendor,omitempty"`
}

func (x *PriceStatistic) Reset() {
	*x = PriceStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_s_solana_nfts_proto_solananfts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceStatistic) ProtoMessage() {}

func (x *PriceStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_s_solana_nfts_proto_solananfts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceStatistic.ProtoReflect.Descriptor instead.
func (*PriceStatistic) Descriptor() ([]byte, []int) {
	return file_s_solana_nfts_proto_solananfts_proto_rawDescGZIP(), []int{1}
}

func (x *PriceStatistic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PriceStatistic) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PriceStatistic) GetLastSoldPrice() float32 {
	if x != nil {
		return x.LastSoldPrice
	}
	return 0
}

func (x *PriceStatistic) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *PriceStatistic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PriceStatistic) GetForSale() bool {
	if x != nil {
		return x.ForSale
	}
	return false
}

func (x *PriceStatistic) GetVendor() SolanaNFTVendor {
	if x != nil {
		return x.Vendor
	}
	return SolanaNFTVendor_UNKNOWN
}

type ReadSolanaPriceStatisticsByCollectionIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorStats []*PriceStatistic `protobuf:"bytes,1,rep,name=vendor_stats,json=vendorStats,proto3" json:"vendor_stats,omitempty"`
}

func (x *ReadSolanaPriceStatisticsByCollectionIDResponse) Reset() {
	*x = ReadSolanaPriceStatisticsByCollectionIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_s_solana_nfts_proto_solananfts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSolanaPriceStatisticsByCollectionIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSolanaPriceStatisticsByCollectionIDResponse) ProtoMessage() {}

func (x *ReadSolanaPriceStatisticsByCollectionIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_s_solana_nfts_proto_solananfts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSolanaPriceStatisticsByCollectionIDResponse.ProtoReflect.Descriptor instead.
func (*ReadSolanaPriceStatisticsByCollectionIDResponse) Descriptor() ([]byte, []int) {
	return file_s_solana_nfts_proto_solananfts_proto_rawDescGZIP(), []int{2}
}

func (x *ReadSolanaPriceStatisticsByCollectionIDResponse) GetVendorStats() []*PriceStatistic {
	if x != nil {
		return x.VendorStats
	}
	return nil
}

var File_s_solana_nfts_proto_solananfts_proto protoreflect.FileDescriptor

var file_s_solana_nfts_proto_solananfts_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x2e, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2d, 0x6e, 0x66, 0x74, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x6e, 0x66, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x01, 0x0a, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53,
	0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4e, 0x46, 0x54, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2d,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4e, 0x46, 0x54, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72,
	0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6f, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4e, 0x46, 0x54,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x65,
	0x0a, 0x2f, 0x52, 0x65, 0x61, 0x64, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x0c, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x2a, 0x37, 0x0a, 0x16, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4e,
	0x46, 0x54, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x2a, 0x3c,
	0x0a, 0x0f, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4e, 0x46, 0x54, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f, 0x45, 0x44, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x53, 0x4f, 0x4c, 0x41, 0x4e, 0x41, 0x52, 0x54, 0x10, 0x02, 0x32, 0x9b, 0x01, 0x0a,
	0x0a, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x6e, 0x66, 0x74, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x27,
	0x52, 0x65, 0x61, 0x64, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x6f,
	0x6c, 0x61, 0x6e, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53,
	0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f,
	0x3b, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x6e, 0x66, 0x74, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_s_solana_nfts_proto_solananfts_proto_rawDescOnce sync.Once
	file_s_solana_nfts_proto_solananfts_proto_rawDescData = file_s_solana_nfts_proto_solananfts_proto_rawDesc
)

func file_s_solana_nfts_proto_solananfts_proto_rawDescGZIP() []byte {
	file_s_solana_nfts_proto_solananfts_proto_rawDescOnce.Do(func() {
		file_s_solana_nfts_proto_solananfts_proto_rawDescData = protoimpl.X.CompressGZIP(file_s_solana_nfts_proto_solananfts_proto_rawDescData)
	})
	return file_s_solana_nfts_proto_solananfts_proto_rawDescData
}

var file_s_solana_nfts_proto_solananfts_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_s_solana_nfts_proto_solananfts_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_s_solana_nfts_proto_solananfts_proto_goTypes = []interface{}{
	(SolanaNFTSortDirection)(0),                             // 0: SolanaNFTSortDirection
	(SolanaNFTVendor)(0),                                    // 1: SolanaNFTVendor
	(*ReadSolanaPriceStatisticsByCollectionIDRequest)(nil),  // 2: ReadSolanaPriceStatisticsByCollectionIDRequest
	(*PriceStatistic)(nil),                                  // 3: PriceStatistic
	(*ReadSolanaPriceStatisticsByCollectionIDResponse)(nil), // 4: ReadSolanaPriceStatisticsByCollectionIDResponse
}
var file_s_solana_nfts_proto_solananfts_proto_depIdxs = []int32{
	1, // 0: ReadSolanaPriceStatisticsByCollectionIDRequest.vendor:type_name -> SolanaNFTVendor
	0, // 1: ReadSolanaPriceStatisticsByCollectionIDRequest.order:type_name -> SolanaNFTSortDirection
	1, // 2: PriceStatistic.vendor:type_name -> SolanaNFTVendor
	3, // 3: ReadSolanaPriceStatisticsByCollectionIDResponse.vendor_stats:type_name -> PriceStatistic
	2, // 4: solananfts.ReadSolanaPriceStatisticsByCollectionID:input_type -> ReadSolanaPriceStatisticsByCollectionIDRequest
	4, // 5: solananfts.ReadSolanaPriceStatisticsByCollectionID:output_type -> ReadSolanaPriceStatisticsByCollectionIDResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_s_solana_nfts_proto_solananfts_proto_init() }
func file_s_solana_nfts_proto_solananfts_proto_init() {
	if File_s_solana_nfts_proto_solananfts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_s_solana_nfts_proto_solananfts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSolanaPriceStatisticsByCollectionIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_s_solana_nfts_proto_solananfts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_s_solana_nfts_proto_solananfts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSolanaPriceStatisticsByCollectionIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_s_solana_nfts_proto_solananfts_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_s_solana_nfts_proto_solananfts_proto_goTypes,
		DependencyIndexes: file_s_solana_nfts_proto_solananfts_proto_depIdxs,
		EnumInfos:         file_s_solana_nfts_proto_solananfts_proto_enumTypes,
		MessageInfos:      file_s_solana_nfts_proto_solananfts_proto_msgTypes,
	}.Build()
	File_s_solana_nfts_proto_solananfts_proto = out.File
	file_s_solana_nfts_proto_solananfts_proto_rawDesc = nil
	file_s_solana_nfts_proto_solananfts_proto_goTypes = nil
	file_s_solana_nfts_proto_solananfts_proto_depIdxs = nil
}
