// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: s.trade-engine/proto/tradeengine.proto

package tradeengineproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TRADE_SIDE int32

const (
	TRADE_SIDE_BUY  TRADE_SIDE = 0
	TRADE_SIDE_SELL TRADE_SIDE = 1
)

// Enum value maps for TRADE_SIDE.
var (
	TRADE_SIDE_name = map[int32]string{
		0: "BUY",
		1: "SELL",
	}
	TRADE_SIDE_value = map[string]int32{
		"BUY":  0,
		"SELL": 1,
	}
)

func (x TRADE_SIDE) Enum() *TRADE_SIDE {
	p := new(TRADE_SIDE)
	*p = x
	return p
}

func (x TRADE_SIDE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TRADE_SIDE) Descriptor() protoreflect.EnumDescriptor {
	return file_s_trade_engine_proto_tradeengine_proto_enumTypes[0].Descriptor()
}

func (TRADE_SIDE) Type() protoreflect.EnumType {
	return &file_s_trade_engine_proto_tradeengine_proto_enumTypes[0]
}

func (x TRADE_SIDE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TRADE_SIDE.Descriptor instead.
func (TRADE_SIDE) EnumDescriptor() ([]byte, []int) {
	return file_s_trade_engine_proto_tradeengine_proto_rawDescGZIP(), []int{0}
}

type TRADE_STATUS int32

const (
	TRADE_STATUS_PENDING   TRADE_STATUS = 0
	TRADE_STATUS_ACTIVE    TRADE_STATUS = 1
	TRADE_STATUS_COMPLETE  TRADE_STATUS = 2
	TRADE_STATUS_CANCELLED TRADE_STATUS = 3
)

// Enum value maps for TRADE_STATUS.
var (
	TRADE_STATUS_name = map[int32]string{
		0: "PENDING",
		1: "ACTIVE",
		2: "COMPLETE",
		3: "CANCELLED",
	}
	TRADE_STATUS_value = map[string]int32{
		"PENDING":   0,
		"ACTIVE":    1,
		"COMPLETE":  2,
		"CANCELLED": 3,
	}
)

func (x TRADE_STATUS) Enum() *TRADE_STATUS {
	p := new(TRADE_STATUS)
	*p = x
	return p
}

func (x TRADE_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TRADE_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_s_trade_engine_proto_tradeengine_proto_enumTypes[1].Descriptor()
}

func (TRADE_STATUS) Type() protoreflect.EnumType {
	return &file_s_trade_engine_proto_tradeengine_proto_enumTypes[1]
}

func (x TRADE_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TRADE_STATUS.Descriptor instead.
func (TRADE_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_s_trade_engine_proto_tradeengine_proto_rawDescGZIP(), []int{1}
}

type TRADE_TYPE int32

const (
	TRADE_TYPE_SPOT               TRADE_TYPE = 0
	TRADE_TYPE_FUTURES_PERPETUALS TRADE_TYPE = 1
	TRADE_TYPE_FUTURES_QUARTERLY  TRADE_TYPE = 2
)

// Enum value maps for TRADE_TYPE.
var (
	TRADE_TYPE_name = map[int32]string{
		0: "SPOT",
		1: "FUTURES_PERPETUALS",
		2: "FUTURES_QUARTERLY",
	}
	TRADE_TYPE_value = map[string]int32{
		"SPOT":               0,
		"FUTURES_PERPETUALS": 1,
		"FUTURES_QUARTERLY":  2,
	}
)

func (x TRADE_TYPE) Enum() *TRADE_TYPE {
	p := new(TRADE_TYPE)
	*p = x
	return p
}

func (x TRADE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TRADE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_s_trade_engine_proto_tradeengine_proto_enumTypes[2].Descriptor()
}

func (TRADE_TYPE) Type() protoreflect.EnumType {
	return &file_s_trade_engine_proto_tradeengine_proto_enumTypes[2]
}

func (x TRADE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TRADE_TYPE.Descriptor instead.
func (TRADE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_s_trade_engine_proto_tradeengine_proto_rawDescGZIP(), []int{2}
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId        string                 `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	ActorId        string                 `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorType      string                 `protobuf:"bytes,3,opt,name=actor_type,json=actorType,proto3" json:"actor_type,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,4,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	Exchange       string                 `protobuf:"bytes,5,opt,name=exchange,proto3" json:"exchange,omitempty"`
	TradeType      string                 `protobuf:"bytes,6,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	Asset          string                 `protobuf:"bytes,7,opt,name=asset,proto3" json:"asset,omitempty"`
	Pair           string                 `protobuf:"bytes,8,opt,name=pair,proto3" json:"pair,omitempty"`
	Entry          float32                `protobuf:"fixed32,9,opt,name=entry,proto3" json:"entry,omitempty"`
	StopLoss       float32                `protobuf:"fixed32,10,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`
	TakeProfits    []float32              `protobuf:"fixed32,11,rep,packed,name=take_profits,json=takeProfits,proto3" json:"take_profits,omitempty"`
	Status         TRADE_STATUS           `protobuf:"varint,12,opt,name=status,proto3,enum=TRADE_STATUS" json:"status,omitempty"`
	RiskReturn     float32                `protobuf:"fixed32,13,opt,name=risk_return,json=riskReturn,proto3" json:"risk_return,omitempty"`
	Created        *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdated    *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	TradeSide      TRADE_SIDE             `protobuf:"varint,16,opt,name=trade_side,json=tradeSide,proto3,enum=TRADE_SIDE" json:"trade_side,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_s_trade_engine_proto_tradeengine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_s_trade_engine_proto_tradeengine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_s_trade_engine_proto_tradeengine_proto_rawDescGZIP(), []int{0}
}

func (x *Trade) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *Trade) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *Trade) GetActorType() string {
	if x != nil {
		return x.ActorType
	}
	return ""
}

func (x *Trade) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *Trade) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Trade) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *Trade) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *Trade) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *Trade) GetEntry() float32 {
	if x != nil {
		return x.Entry
	}
	return 0
}

func (x *Trade) GetStopLoss() float32 {
	if x != nil {
		return x.StopLoss
	}
	return 0
}

func (x *Trade) GetTakeProfits() []float32 {
	if x != nil {
		return x.TakeProfits
	}
	return nil
}

func (x *Trade) GetStatus() TRADE_STATUS {
	if x != nil {
		return x.Status
	}
	return TRADE_STATUS_PENDING
}

func (x *Trade) GetRiskReturn() float32 {
	if x != nil {
		return x.RiskReturn
	}
	return 0
}

func (x *Trade) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Trade) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *Trade) GetTradeSide() TRADE_SIDE {
	if x != nil {
		return x.TradeSide
	}
	return TRADE_SIDE_BUY
}

type CreateTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade   *Trade `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
	Execute bool   `protobuf:"varint,2,opt,name=execute,proto3" json:"execute,omitempty"`
}

func (x *CreateTradeRequest) Reset() {
	*x = CreateTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_s_trade_engine_proto_tradeengine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTradeRequest) ProtoMessage() {}

func (x *CreateTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_s_trade_engine_proto_tradeengine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTradeRequest.ProtoReflect.Descriptor instead.
func (*CreateTradeRequest) Descriptor() ([]byte, []int) {
	return file_s_trade_engine_proto_tradeengine_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTradeRequest) GetTrade() *Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

func (x *CreateTradeRequest) GetExecute() bool {
	if x != nil {
		return x.Execute
	}
	return false
}

type CreateTradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTradeResponse) Reset() {
	*x = CreateTradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_s_trade_engine_proto_tradeengine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTradeResponse) ProtoMessage() {}

func (x *CreateTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_s_trade_engine_proto_tradeengine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTradeResponse.ProtoReflect.Descriptor instead.
func (*CreateTradeResponse) Descriptor() ([]byte, []int) {
	return file_s_trade_engine_proto_tradeengine_proto_rawDescGZIP(), []int{2}
}

var File_s_trade_engine_proto_tradeengine_proto protoreflect.FileDescriptor

var file_s_trade_engine_proto_tradeengine_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x04, 0x0a, 0x05, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6d,
	0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x0b, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x54,
	0x52, 0x41, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x69, 0x64, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x1f, 0x0a, 0x0a, 0x54, 0x52,
	0x41, 0x44, 0x45, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x55, 0x59, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x01, 0x2a, 0x44, 0x0a, 0x0c, 0x54,
	0x52, 0x41, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x03, 0x2a, 0x45, 0x0a, 0x0a, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x50, 0x4f, 0x54, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x55, 0x54,
	0x55, 0x52, 0x45, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x50, 0x45, 0x54, 0x55, 0x41, 0x4c, 0x53, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x53, 0x5f, 0x51, 0x55, 0x41,
	0x52, 0x54, 0x45, 0x52, 0x4c, 0x59, 0x10, 0x02, 0x32, 0x49, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x3b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_s_trade_engine_proto_tradeengine_proto_rawDescOnce sync.Once
	file_s_trade_engine_proto_tradeengine_proto_rawDescData = file_s_trade_engine_proto_tradeengine_proto_rawDesc
)

func file_s_trade_engine_proto_tradeengine_proto_rawDescGZIP() []byte {
	file_s_trade_engine_proto_tradeengine_proto_rawDescOnce.Do(func() {
		file_s_trade_engine_proto_tradeengine_proto_rawDescData = protoimpl.X.CompressGZIP(file_s_trade_engine_proto_tradeengine_proto_rawDescData)
	})
	return file_s_trade_engine_proto_tradeengine_proto_rawDescData
}

var file_s_trade_engine_proto_tradeengine_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_s_trade_engine_proto_tradeengine_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_s_trade_engine_proto_tradeengine_proto_goTypes = []interface{}{
	(TRADE_SIDE)(0),               // 0: TRADE_SIDE
	(TRADE_STATUS)(0),             // 1: TRADE_STATUS
	(TRADE_TYPE)(0),               // 2: TRADE_TYPE
	(*Trade)(nil),                 // 3: Trade
	(*CreateTradeRequest)(nil),    // 4: CreateTradeRequest
	(*CreateTradeResponse)(nil),   // 5: CreateTradeResponse
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_s_trade_engine_proto_tradeengine_proto_depIdxs = []int32{
	1, // 0: Trade.status:type_name -> TRADE_STATUS
	6, // 1: Trade.created:type_name -> google.protobuf.Timestamp
	6, // 2: Trade.last_updated:type_name -> google.protobuf.Timestamp
	0, // 3: Trade.trade_side:type_name -> TRADE_SIDE
	3, // 4: CreateTradeRequest.trade:type_name -> Trade
	4, // 5: tradeengine.CreateTrade:input_type -> CreateTradeRequest
	5, // 6: tradeengine.CreateTrade:output_type -> CreateTradeResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_s_trade_engine_proto_tradeengine_proto_init() }
func file_s_trade_engine_proto_tradeengine_proto_init() {
	if File_s_trade_engine_proto_tradeengine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_s_trade_engine_proto_tradeengine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_s_trade_engine_proto_tradeengine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_s_trade_engine_proto_tradeengine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_s_trade_engine_proto_tradeengine_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_s_trade_engine_proto_tradeengine_proto_goTypes,
		DependencyIndexes: file_s_trade_engine_proto_tradeengine_proto_depIdxs,
		EnumInfos:         file_s_trade_engine_proto_tradeengine_proto_enumTypes,
		MessageInfos:      file_s_trade_engine_proto_tradeengine_proto_msgTypes,
	}.Build()
	File_s_trade_engine_proto_tradeengine_proto = out.File
	file_s_trade_engine_proto_tradeengine_proto_rawDesc = nil
	file_s_trade_engine_proto_tradeengine_proto_goTypes = nil
	file_s_trade_engine_proto_tradeengine_proto_depIdxs = nil
}
